Toggling the link carrier is a non sense and is the grossest locking I can
think of. Moreover, it's giving a completely inaccurate status to userspace
who could for example decide to turn the interface down on carrier off
detection.

Signed-off-by: Samuel Ortiz <sameo@linux.intel.com>
---
 drivers/staging/rtl8192e/ieee80211/ieee80211_softmac_wx.c |    2 --
 drivers/staging/rtl8192e/r8192E_core.c                    |    1 -
 2 files changed, 3 deletions(-)

Index: b/drivers/staging/rtl8192e/ieee80211/ieee80211_softmac_wx.c
===================================================================
--- a/drivers/staging/rtl8192e/ieee80211/ieee80211_softmac_wx.c	2010-01-15 19:31:39.000000000 +0100
+++ b/drivers/staging/rtl8192e/ieee80211/ieee80211_softmac_wx.c	2010-01-15 19:32:07.000000000 +0100
@@ -326,7 +326,6 @@ void ieee80211_wx_sync_scan_wq(struct ie
 	int b40M = 0;
 	static int count = 0;
 	chan = ieee->current_network.channel;
-	netif_carrier_off(ieee->dev);
 
 	if (ieee->data_hard_stop)
 		ieee->data_hard_stop(ieee->dev);
@@ -372,7 +371,6 @@ void ieee80211_wx_sync_scan_wq(struct ie
 	if(ieee->iw_mode == IW_MODE_ADHOC || ieee->iw_mode == IW_MODE_MASTER)
 		ieee80211_start_send_beacons(ieee);
 
-	netif_carrier_on(ieee->dev);
 	count = 0;
 	up(&ieee->wx_sem);
 
Index: b/drivers/staging/rtl8192e/r8192E_core.c
===================================================================
--- a/drivers/staging/rtl8192e/r8192E_core.c	2010-01-15 20:03:06.000000000 +0100
+++ b/drivers/staging/rtl8192e/r8192E_core.c	2010-01-15 20:03:11.000000000 +0100
@@ -4046,7 +4046,6 @@ RESET_START:
 			del_timer_sync(&ieee->associate_timer);
                         cancel_delayed_work(&ieee->associate_retry_wq);
 			ieee80211_stop_scan(ieee);
-			netif_carrier_off(dev);
 			up(&ieee->wx_sem);
 		}
 		else{

-- 
Intel Open Source Technology Centre
http://oss.intel.com/
_______________________________________________
Moblin-kernel mailing list
Moblin-kernel@linux.intel.com
http://linux.intel.com/mailman/listinfo/moblin-kernel

