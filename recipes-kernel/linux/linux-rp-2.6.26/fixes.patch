Index: git/arch/arm/Makefile
===================================================================
--- git.orig/arch/arm/Makefile	2008-06-13 13:10:59.000000000 +0100
+++ git/arch/arm/Makefile	2008-07-19 10:31:31.000000000 +0100
@@ -47,7 +47,7 @@
 # Note that GCC does not numerically define an architecture version
 # macro, but instead defines a whole series of macros which makes
 # testing for a specific architecture or later rather impossible.
-arch-$(CONFIG_CPU_32v7)		:=-D__LINUX_ARM_ARCH__=7 $(call cc-option,-march=armv7a,-march=armv5t -Wa$(comma)-march=armv7a)
+arch-$(CONFIG_CPU_32v7)		:=-D__LINUX_ARM_ARCH__=7 $(call cc-option,-march=armv7-a,-march=armv5t -Wa$(comma)-march=armv7-a)
 arch-$(CONFIG_CPU_32v6)		:=-D__LINUX_ARM_ARCH__=6 $(call cc-option,-march=armv6,-march=armv5t -Wa$(comma)-march=armv6)
 # Only override the compiler option if ARMv6. The ARMv6K extensions are
 # always available in ARMv7
Index: git/include/asm-arm/processor.h
===================================================================
--- git.orig/include/asm-arm/processor.h	2008-06-13 13:12:19.000000000 +0100
+++ git/include/asm-arm/processor.h	2008-07-19 10:31:31.000000000 +0100
@@ -109,14 +109,16 @@
 #if __LINUX_ARM_ARCH__ >= 5
 
 #define ARCH_HAS_PREFETCH
-static inline void prefetch(const void *ptr)
+#define prefetch(ptr) __builtin_prefetch(ptr)
+
+/*static inline void prefetch(const void *ptr)
 {
 	__asm__ __volatile__(
-		"pld\t%0"
+		"pld\ta%0"
 		:
-		: "o" (*(char *)ptr)
+		: "p" (ptr)
 		: "cc");
-}
+}*/
 
 #define ARCH_HAS_PREFETCHW
 #define prefetchw(ptr)	prefetch(ptr)
